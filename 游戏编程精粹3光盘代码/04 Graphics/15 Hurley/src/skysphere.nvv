; Transforms a vertex to homogenoeous clip space
; and lights it with a single directional light in
; world space, then outputs a texture coordinate.
; - 7 instructions
; Note that negative output colors will be clamped
; by the implicit 0-1 clamp after the shader

#include "constants.h"

#define srcPosition v0
#define srcNormal	v1
#define srcTexCoord	v2

#define destTexCoord oT0
#define destColor oD0

	vs.1.1


;transform position
	dp4 oPos.x, srcPosition, c[CV_WORLDVIEWPROJ_0]
	dp4 oPos.y, srcPosition, c[CV_WORLDVIEWPROJ_1]
	dp4 oPos.z, srcPosition, c[CV_WORLDVIEWPROJ_2]
	dp4 oPos.w, srcPosition, c[CV_WORLDVIEWPROJ_3]

	dp3	r0, srcNormal, c[CV_LIGHT_DIRECTION]

	slt	r1, r0, CV_HALF
	mul	r2, r1, CV_HALF
	add	r3, CV_ONE, -r1
	mad	destColor, r3, r0, r2

;	mov destColor, CV_ONE

; Output texture coordinates
	mov destTexCoord, srcPosition
        