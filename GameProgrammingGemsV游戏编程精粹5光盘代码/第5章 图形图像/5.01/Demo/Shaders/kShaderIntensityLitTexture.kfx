#include "kShaderSharedParams.h"

sampler Texture;
sampler IntensityTexture;
float4 IntensityCoords;

struct VS_INPUT
{
    float3 position : POSITION;
    float2 texcoord : TEXCOORD0;
    float4 diffuse : COLOR0;
};

struct VS_OUTPUT
{
    float4 position : POSITION;
    float2 texcoord : TEXCOORD0;
    float4 diffuse : COLOR0;
};

VS_OUTPUT VertexShader(const VS_INPUT v)
{
    VS_OUTPUT o = (VS_OUTPUT)0;
    o.position = mul(float4(v.position.xyz, 1.0f), mWorldViewProj);
    o.texcoord = v.texcoord;
    o.diffuse = v.diffuse;
    return o;
}

float4 PixelShader(const VS_OUTPUT v) : COLOR
{
    float4 Intensity = 0.1f - tex2D(IntensityTexture, IntensityCoords.xy);
    return float4(tex2D(Texture, v.texcoord).rgb * v.diffuse * v.diffuse.a * Intensity.r * 2.0f, 1.0f);
}
